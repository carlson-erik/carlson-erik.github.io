{"version":3,"file":"component---src-pages-projects-tsx-bf5b61c0f8fee843a4c6.js","mappings":"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","sources":["webpack://portfolio/./src/pages/projects.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n/* ------------------ Components ------------------ */\nimport Layout from \"../components/layout\";\nimport { Heading, Link, Paragraph } from \"../components/styled\";\nimport SkillList from \"../components/skill-list\";\nimport { ThemeContext, ThemeProvider } from \"../theme/context\";\nimport { Theme } from \"../theme/types\";\n\nconst ProjectRow = styled.div<{ reversed?: boolean }>`\n  width: 100%;\n  display: flex;\n\n  @media only screen and (max-width: 850px) {\n    flex-direction: ${(props) =>\n    props.reversed ? \"column-reverse\" : \"column\"};\n  }\n`;\n\nconst PictureContainer = styled.div<{ theme: Theme }>`\n  flex-basis: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & .gatsby-image-wrapper {\n    width: 85%;\n    box-shadow: 5px 3px 6px\n      ${(props) => props.theme.colors?.borderLine || \"#888888\"};\n    border: 1px solid ${(props) => props.theme.colors.borderLine || \"#888888\"};\n    border-radius: 0.25rem;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  flex-basis: 50%;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst DetailContainer = styled.div<{ largeContent: boolean }>`\n  width: 100%;\n  display: flex;\n  align-items: center;\n\n  ${(props) =>\n    props.largeContent\n      ? `\n        flex-direction: column;\n        align-items: unset;\n        & > span {\n          padding: 0;\n        }\n      `\n      : \"\"}\n`;\n\nconst SkillListContainer = styled.div`\n  flex-grow: 1;\n`;\n\nconst ProjectName = styled.h3`\n  font-size: 1.5rem;\n`;\n\nconst DetailLabel = styled.span`\n  padding-right: 0.5rem;\n  font-weight: bold;\n`;\n\nconst Content = () => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <Layout>\n      <Helmet>\n        <title>Projects | Erik Carlson</title>\n        <meta\n          name=\"description\"\n          content=\"Software Engineer Erik Carlson's Personal Projects\"\n        />\n      </Helmet>\n      <Heading>What I'm Working On</Heading>\n      <ProjectRow id=\"elastic-editor\">\n        <PictureContainer theme={theme}>\n          <StaticImage\n            src=\"../images/projects/elastic-editor.png\"\n            alt=\"ElasticEditor picture\"\n          />\n        </PictureContainer>\n        <ContentContainer>\n          <ProjectName>ElasticEditor</ProjectName>\n          <DetailContainer largeContent>\n            <Paragraph>\n              ElasticEditor is a solution for developers that need to include rich\n              content in their React projects. This component makes it easy for\n              someone to add powerful rich content to their React projects\n              without having to adopt complex technical debt.\n            </Paragraph>\n          </DetailContainer>\n          <DetailContainer largeContent>\n            <DetailLabel>Why Did I Build This?</DetailLabel>\n            <Paragraph>\n              Like many others, I was working on a project and I needed to add\n              rich content to it. Rich content isn't an easy problem to solve\n              and often involves lots of hacky solutions. I found myself\n              presented with two different solutions:\n            </Paragraph>\n            <ul>\n              <li>\n                <DetailLabel>Solution A</DetailLabel>\n                <ul>\n                  <li>Quick performance (usually)</li>\n                  <li>Easy to implment</li>\n                  <li>\n                    <b>Not</b> feaure rich\n                  </li>\n                </ul>\n              </li>\n              <li>\n                <DetailLabel>Solution B</DetailLabel>\n                <ul>\n                  <li>Incredibly complex, but powerful APIs</li>\n                  <li>Takes much longer to implement</li>\n                  <li>Forces you to solve a project you don't need to</li>\n                </ul>\n              </li>\n            </ul>\n            <Paragraph>\n              Given these options, I decided that it would be difficult to work\n              on creating a complex API.This is something that a large company\n              or group of folks should build. I decided that I would make an\n              impact for folks looking for a feature rich <b>Solution A</b>.\n            </Paragraph>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Website:</DetailLabel>\n            <Link\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://elastic-editor.com\"\n            >\n              elastic-editor.com\n            </Link>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Repository:</DetailLabel>\n            <Link\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              hasIcon\n              href=\"https://github.com/carlson-erik/elastic-editor\"\n            >\n              Github\n            </Link>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Relevant tech:</DetailLabel>\n            <SkillListContainer>\n              <SkillList\n                skills={[\n                  { type: \"react\" },\n                  { type: \"typescript\" },\n                  { type: \"jest\" },\n                  { type: \"rollup\" },\n                ]}\n              />\n            </SkillListContainer>\n          </DetailContainer>\n        </ContentContainer>\n      </ProjectRow>\n      <Heading>Projects I've Built</Heading>\n      <ProjectRow id=\"coddit\">\n        <PictureContainer theme={theme}>\n          <StaticImage\n            src=\"../images/projects/coddit.png\"\n            alt=\"coddit project picture\"\n          />\n        </PictureContainer>\n        <ContentContainer>\n          <ProjectName>coddit</ProjectName>\n          <DetailContainer largeContent>\n            <Paragraph>\n              Coddit is a web application that renders Reddit as if it were\n              code. Coddit allows users to take advantage of features such as\n              previewing posts, rendering in different programming languages\n              (JavaScript, Python and C#), as well as theming in different color\n              schemes. The user has the ability to browse reddit in coddit as\n              they would normally browse subreddits and posts.\n            </Paragraph>\n          </DetailContainer>\n          <DetailContainer largeContent>\n            <DetailLabel>Why Did I Build This?</DetailLabel>\n            <Paragraph>\n              I would often browse reddit.com in different ways (mobile apps,\n              RES, etc). This gave me inspiration to build a way to browse\n              reddit in a out-of-the-norm way. This project conveniently allowed\n              me to learn ES6, React.js and related frontend technologies as\n              well!\n            </Paragraph>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Website:</DetailLabel>\n            <Link\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://coddit.dev/\"\n            >\n              coddit.dev\n            </Link>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Repository:</DetailLabel>\n            <Link\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              hasIcon\n              href=\"https://github.com/carlson-erik/coddit\"\n            >\n              Github\n            </Link>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Relevant tech:</DetailLabel>\n            <SkillListContainer>\n              <SkillList\n                skills={[\n                  { type: \"react\" },\n                  { type: \"javascript\" },\n                  { type: \"redux\" },\n                ]}\n              />\n            </SkillListContainer>\n          </DetailContainer>\n        </ContentContainer>\n      </ProjectRow>\n      <ProjectRow id=\"portfolio\">\n        <PictureContainer theme={theme}>\n          <StaticImage\n            src=\"../images/projects/portfolio.png\"\n            alt=\"project template image\"\n          />\n        </PictureContainer>\n        <ContentContainer>\n          <ProjectName>This Portfolio!</ProjectName>\n          <DetailContainer largeContent>\n            <Paragraph>\n              Using Gatsby and TypeScript, I built the very site you're using\n              now. With this site, I want to show off the cool projects that\n              I've built and document my learning journey in a blog!\n            </Paragraph>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Website:</DetailLabel>\n            <Link\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://erikcarlson.dev\"\n            >\n              ErikCarlson.dev\n            </Link>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Repository:</DetailLabel>\n            <Link\n              hasIcon\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/carlson-erik/carlson-erik.github.io\"\n            >\n              Github\n            </Link>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Relevant tech:</DetailLabel>\n            <SkillListContainer>\n              <SkillList\n                skills={[\n                  { type: \"gatsby\" },\n                  { type: \"react\" },\n                  { type: \"typescript\" },\n                ]}\n              />\n            </SkillListContainer>\n          </DetailContainer>\n        </ContentContainer>\n      </ProjectRow>\n    </Layout>\n  );\n};\n\nconst ProjectsPage = () => {\n  return (\n    <ThemeProvider>\n      <Content />\n    </ThemeProvider>\n  );\n};\n\nexport default ProjectsPage;\n"],"names":["ProjectRow","styled","div","withConfig","displayName","componentId","props","reversed","PictureContainer","_props$theme$colors","theme","colors","borderLine","ContentContainer","DetailContainer","largeContent","SkillListContainer","ProjectName","h3","DetailLabel","span","Content","useContext","ThemeContext","React","Layout","Helmet","name","content","Heading","id","StaticImage","src","alt","__imageData","require","Paragraph","Link","target","rel","href","hasIcon","SkillList","skills","type","ProjectsPage","ThemeProvider"],"sourceRoot":""}