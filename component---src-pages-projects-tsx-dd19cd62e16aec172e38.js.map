{"version":3,"file":"component---src-pages-projects-tsx-dd19cd62e16aec172e38.js","mappings":"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","sources":["webpack://portfolio/./src/components/template-image.tsx","webpack://portfolio/./src/pages/projects.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { ThemeContext } from \"../theme/context\";\n\nexport default function TemplateImage() {\n  const { theme } = useContext(ThemeContext);\n  return theme && theme.name === \"Dark\" ? (\n    <StaticImage\n      src=\"../images/projects/dark-project-template.png\"\n      alt=\"dark project template image\"\n    />\n  ) : (\n    <StaticImage\n      src=\"../images/projects/light-project-template.png\"\n      alt=\"light project template image\"\n    />\n  );\n}\n","import React, { useContext } from \"react\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n/* ------------------ Components ------------------ */\nimport Layout from \"../components/layout\";\nimport { Heading, Link, Paragraph } from \"../components/styled\";\nimport SkillList from \"../components/skill-list\";\nimport { ThemeContext, ThemeProvider } from \"../theme/context\";\nimport { Theme } from \"../theme/types\";\nimport TemplateImage from \"../components/template-image\";\n\nconst ProjectRow = styled.div<{ reversed?: boolean }>`\n  width: 100%;\n  display: flex;\n\n  @media only screen and (max-width: 850px) {\n    flex-direction: ${(props) =>\n      props.reversed ? \"column-reverse\" : \"column\"};\n  }\n`;\n\nconst PictureContainer = styled.div<{ theme: Theme }>`\n  flex-basis: 40%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & .gatsby-image-wrapper {\n    width: 85%;\n    box-shadow: 5px 3px 6px\n      ${(props) => props.theme.colors?.borderLine || \"#888888\"};\n    border: 1px solid ${(props) => props.theme.colors.borderLine || \"#888888\"};\n    border-radius: 0.25rem;\n  }\n\n  @media only screen and (max-width: 850px) and (min-width: 500px) {\n    & .gatsby-image-wrapper {\n      width: 50%;\n    }\n  }\n`;\n\nconst ContentContainer = styled.div`\n  flex-basis: 60%;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst DetailContainer = styled.div<{ largeContent: boolean }>`\n  width: 100%;\n  display: flex;\n  align-items: center;\n\n  ${(props) =>\n    props.largeContent\n      ? `\n        flex-direction: column;\n        align-items: unset;\n        & > span {\n          padding: 0;\n        }\n      `\n      : \"\"}\n`;\n\nconst SkillListContainer = styled.div`\n  flex-grow: 1;\n`;\n\nconst ProjectName = styled.h3`\n  font-size: 1.5rem;\n`;\n\nconst DetailLabel = styled.span`\n  padding-right: 0.5rem;\n  font-weight: bold;\n`;\n\nconst Content = () => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <Layout>\n      <Helmet>\n        <title>Projects | Erik Carlson</title>\n        <meta\n          name=\"description\"\n          content=\"Software Engineer Erik Carlson's Personal Projects\"\n        />\n      </Helmet>\n      <Heading>What I'm Working On</Heading>\n      <ProjectRow id=\"revision-editor\">\n        <PictureContainer theme={theme}>\n          <TemplateImage />\n        </PictureContainer>\n        <ContentContainer>\n          <ProjectName>Revision Editor</ProjectName>\n          <DetailContainer largeContent>\n            <Paragraph>\n              Revision Editor is a rich text Editor React Component that handles\n              all the rendering and editing for rich text content represented as\n              JSON. The goal for this project is to make a component that a user\n              can plug into their application with little to no configuration\n              and have a powerful RTE experience.\n            </Paragraph>\n          </DetailContainer>\n          <DetailContainer largeContent>\n            <DetailLabel>Why Did I Build This?</DetailLabel>\n            <Paragraph>\n              While working on other projects, I've bumped into the complex\n              problem that is rich text. From editing to storing to rendering\n              it, rich text content is a difficult problem for all Web\n              Developers. Some solutions involve editing the DOM and storing\n              HTML in the database. I wanted to solve this in React and make it\n              easy for React Developers to enable their users to create rich\n              text content.\n            </Paragraph>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Repository:</DetailLabel>\n            <Link\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              hasIcon\n              href=\"https://github.com/carlson-erik/rt-editor\"\n            >\n              Github\n            </Link>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Skills utilized:</DetailLabel>\n            <SkillListContainer>\n              <SkillList skills={[{ type: \"react\" }, { type: \"typescript\" }]} />\n            </SkillListContainer>\n          </DetailContainer>\n        </ContentContainer>\n      </ProjectRow>\n      <Heading>Projects I've Built</Heading>\n      <ProjectRow id=\"coddit\">\n        <PictureContainer theme={theme}>\n          <StaticImage\n            src=\"../images/projects/coddit.png\"\n            alt=\"coddit project picture\"\n          />\n        </PictureContainer>\n        <ContentContainer>\n          <ProjectName>coddit</ProjectName>\n          <DetailContainer largeContent>\n            <Paragraph>\n              Coddit is a web application that renders Reddit as if it were\n              code. Coddit allows users to take advantage of features such as\n              previewing posts, rendering in different programming languages\n              (JavaScript, Python and C#), as well as theming in different color\n              schemes. The user has the ability to browse reddit in coddit as\n              they would normally browse subreddits and posts.\n            </Paragraph>\n          </DetailContainer>\n          <DetailContainer largeContent>\n            <DetailLabel>Why Did I Build This?</DetailLabel>\n            <Paragraph>\n              Like most redditors, I spend a fair amount of time on reddit. I\n              built coddit so that I could browse reddit in a out-of-the-norm\n              way and so that I could learn ES6, React.js and related\n              technologies.\n            </Paragraph>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Live link:</DetailLabel>\n            <Link\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://coddit.dev/\"\n            >\n              coddit.dev\n            </Link>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Repository:</DetailLabel>\n            <Link\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              hasIcon\n              href=\"https://github.com/carlson-erik/coddit\"\n            >\n              Github\n            </Link>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Skills utilized:</DetailLabel>\n            <SkillListContainer>\n              <SkillList\n                skills={[\n                  { type: \"react\" },\n                  { type: \"javascript\" },\n                  { type: \"redux\" },\n                ]}\n              />\n            </SkillListContainer>\n          </DetailContainer>\n        </ContentContainer>\n      </ProjectRow>\n      <ProjectRow id=\"portfolio\">\n        <PictureContainer theme={theme}>\n          <StaticImage\n            src=\"../images/projects/portfolio.png\"\n            alt=\"project template image\"\n          />\n        </PictureContainer>\n        <ContentContainer>\n          <ProjectName>This Portfolio!</ProjectName>\n          <DetailContainer largeContent>\n            <Paragraph>\n              Using Gatsby and TypeScript, I built the very site you're using\n              now. With this site, I want to show off the cool projects that\n              I've built and document my learning journey in a blog!\n            </Paragraph>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Live link:</DetailLabel>\n            <Link\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"http://erikcarlson.dev\"\n            >\n              erikcarlson.dev\n            </Link>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Repository:</DetailLabel>\n            <Link\n              hasIcon\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://github.com/carlson-erik/carlson-erik.github.io\"\n            >\n              Github\n            </Link>\n          </DetailContainer>\n          <DetailContainer>\n            <DetailLabel>Skills utilized:</DetailLabel>\n            <SkillListContainer>\n              <SkillList\n                skills={[\n                  { type: \"gatsby\" },\n                  { type: \"react\" },\n                  { type: \"typescript\" },\n                ]}\n              />\n            </SkillListContainer>\n          </DetailContainer>\n        </ContentContainer>\n      </ProjectRow>\n    </Layout>\n  );\n};\n\nconst ProjectsPage = () => {\n  return (\n    <ThemeProvider>\n      <Content />\n    </ThemeProvider>\n  );\n};\n\nexport default ProjectsPage;\n"],"names":["TemplateImage","theme","useContext","ThemeContext","name","S","src","alt","ProjectRow","styled","props","reversed","PictureContainer","colors","borderLine","ContentContainer","DetailContainer","largeContent","SkillListContainer","ProjectName","DetailLabel","Content","Helmet","content","id","target","rel","hasIcon","href","skills","type"],"sourceRoot":""}