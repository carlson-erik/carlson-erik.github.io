{"version":3,"file":"component---src-pages-index-tsx-9fb67ec44b72d6179ad7.js","mappings":"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","sources":["webpack://portfolio/./src/images/icons/simple/external-link.tsx","webpack://portfolio/./src/components/project-list.tsx","webpack://portfolio/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { DevIcon, SocialIcon } from \"../../styled\";\nimport { IconProps } from \"../../types\";\n\nconst ICON_DEFAULT = \"lightgrey\";\n\nconst ExternalLink = (props: IconProps) => {\n  const { color, type } = props;\n  const fillColor = color && color !== \"\" ? color : ICON_DEFAULT;\n  const Icon = type === \"social\" ? SocialIcon : DevIcon;\n  return (\n    <Icon\n      role=\"img\"\n      viewBox=\"0 0 24 24\"\n      fill={fillColor}\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M15.75 2.25H21a.75.75 0 01.75.75v5.25a.75.75 0 01-1.5 0V4.81L8.03 17.03a.75.75 0 01-1.06-1.06L19.19 3.75h-3.44a.75.75 0 010-1.5zm-10.5 4.5a1.5 1.5 0 00-1.5 1.5v10.5a1.5 1.5 0 001.5 1.5h10.5a1.5 1.5 0 001.5-1.5V10.5a.75.75 0 011.5 0v8.25a3 3 0 01-3 3H5.25a3 3 0 01-3-3V8.25a3 3 0 013-3h8.25a.75.75 0 010 1.5H5.25z\"\n        clipRule=\"evenodd\"\n      />\n    </Icon>\n  );\n};\n\nexport default ExternalLink;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n/* ------------------ Components ------------------ */\nimport { Heading, Link, Paragraph } from \"../components/styled\";\nimport SkillList, { IconLink } from \"../components/skill-list\";\nimport { ThemeContext } from \"../theme/context\";\nimport { Theme } from \"../theme/types\";\nimport Github from \"../images/icons/alt/github\";\nimport ExternalLink from \"../images/icons/simple/external-link\";\n\nconst ProjectRow = styled.div<{ reversed?: boolean }>`\n  width: 100%;\n  display: flex;\n\n  @media only screen and (max-width: 850px) {\n    flex-direction: ${(props) =>\n      props.reversed ? \"column-reverse\" : \"column\"};\n  }\n`;\n\nconst PictureContainer = styled.div<{ theme: Theme }>`\n  flex-basis: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & .gatsby-image-wrapper {\n    width: 85%;\n    box-shadow: 5px 3px 6px\n      ${(props) => props.theme.colors?.borderLine || \"#888888\"};\n    border: 1px solid ${(props) => props.theme.colors.borderLine || \"#888888\"};\n    border-radius: 0.25rem;\n  }\n`;\n\nconst ContentContainer = styled.div`\n  flex-basis: 50%;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n`;\n\nconst Project = styled.div<{ theme: Theme }>`\n  flex-basis: calc(50% - 1rem);\n  height: fit-content;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n  background-color: ${(props) => props.theme.colors.projectList.background};\n\n  @media only screen and (max-width: 625px) {\n    width: 100%;\n    flex-basis: 100%;\n  }\n`;\n\nconst ProjectHeader = styled.div`\n  display: flex;\n`;\n\nconst ProjectLinks = styled.div`\n  flex-grow: 1;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst DetailContainer = styled.div<{ largeContent: boolean }>`\n  width: 100%;\n  display: flex;\n  align-items: center;\n\n  ${(props) =>\n    props.largeContent\n      ? `\n        flex-direction: column;\n        align-items: unset;\n        & > span {\n          padding: 0;\n        }\n      `\n      : \"\"}\n`;\n\nconst SkillListContainer = styled.div`\n  flex-grow: 1;\n`;\n\nconst ProjectName = styled.h3`\n  font-size: 1.5rem;\n`;\n\nconst DetailLabel = styled.span`\n  padding-right: 0.5rem;\n  font-weight: bold;\n`;\n\nconst ProjectContainer = styled.div`\n  display: flex;\n  gap: 1rem;\n  flex-wrap: wrap;\n`;\n\nconst Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst ProjectSectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst ProjectList = () => {\n  const { theme } = useContext(ThemeContext);\n  return (\n    <ProjectSectionContainer>\n      <Section>\n        <Heading>What I'm Working On</Heading>\n        <ProjectRow id=\"elastic-editor\">\n          <PictureContainer theme={theme}>\n            {theme.name === \"Light\" ? (\n              <StaticImage\n                src=\"../images/projects/elastic-editor-light.png\"\n                alt=\"ElasticEditor picture\"\n              />\n            ) : (\n              <StaticImage\n                src=\"../images/projects/elastic-editor-dark.png\"\n                alt=\"ElasticEditor picture\"\n              />\n            )}\n          </PictureContainer>\n          <ContentContainer>\n            <ProjectHeader>\n              <ProjectName>ElasticEditor</ProjectName>\n              <ProjectLinks>\n                <IconLink\n                  key=\"project-github\"\n                  href=\"https://github.com/carlson-erik/elastic-editor\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  title=\"ElasticEditor github repo\"\n                  theme={theme}\n                >\n                  {\n                    <Github\n                      type=\"dev\"\n                      useAlt={false}\n                      color={theme.colors.projectList.project.iconColor}\n                    />\n                  }\n                </IconLink>\n              </ProjectLinks>\n            </ProjectHeader>\n            <DetailContainer largeContent>\n              <Paragraph>\n                ElasticEditor allows developers to include modifiable rich\n                content in their React projects. At the core of ElasticEditor is\n                a customizable editor that allows users to easily create\n                content. Also included are APIs that allow you to export your\n                content into different forms.\n              </Paragraph>\n            </DetailContainer>\n            <DetailContainer>\n              <DetailLabel>Technologies:</DetailLabel>\n              <SkillListContainer>\n                <SkillList\n                  skills={[\n                    { type: \"react\" },\n                    { type: \"typescript\" },\n                    { type: \"jest\" },\n                    { type: \"rollup\" },\n                  ]}\n                />\n              </SkillListContainer>\n            </DetailContainer>\n          </ContentContainer>\n        </ProjectRow>\n      </Section>\n      <Section>\n        <Heading>Past Projects</Heading>\n        <ProjectContainer>\n          <Project id=\"coddit\" theme={theme}>\n            <ProjectHeader>\n              <ProjectName>coddit</ProjectName>\n              <ProjectLinks>\n                <IconLink\n                  key=\"project-github\"\n                  href=\"https://github.com/carlson-erik/coddit\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  title=\"coddit github repo\"\n                  theme={theme}\n                >\n                  {\n                    <Github\n                      type=\"dev\"\n                      useAlt={false}\n                      color={theme.colors.projectList.project.iconColor}\n                    />\n                  }\n                </IconLink>\n                <IconLink\n                  key=\"project-website\"\n                  href=\"https://coddit.dev/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  title=\"coddit website\"\n                  theme={theme}\n                >\n                  {\n                    <ExternalLink\n                      type=\"dev\"\n                      color={theme.colors.projectList.project.iconColor}\n                    />\n                  }\n                </IconLink>\n              </ProjectLinks>\n            </ProjectHeader>\n            <DetailContainer largeContent>\n              <Paragraph>\n                Coddit is a web application that renders Reddit as if it were\n                code. Coddit allows users to take advantage features such as\n                previewing posts, rendering in different programming languages\n                (JavaScript, Python and C#), as well as theming in different\n                color schemes. The user has the ability to browse reddit in\n                coddit as they would normally browse subreddits and posts.\n              </Paragraph>\n            </DetailContainer>\n            <DetailContainer>\n              <DetailLabel>Technologies:</DetailLabel>\n              <SkillListContainer>\n                <SkillList\n                  skills={[\n                    { type: \"react\" },\n                    { type: \"javascript\" },\n                    { type: \"redux\" },\n                  ]}\n                />\n              </SkillListContainer>\n            </DetailContainer>\n          </Project>\n          <Project id=\"componentry\" theme={theme}>\n            <ProjectHeader>\n              <ProjectName>Componentry</ProjectName>\n              <ProjectLinks>\n                <IconLink\n                  key=\"project-github\"\n                  href=\"https://github.com/carlson-erik/componentry\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  title=\"componentry github repo\"\n                  theme={theme}\n                >\n                  {\n                    <Github\n                      type=\"dev\"\n                      useAlt={false}\n                      color={theme.colors.projectList.project.iconColor}\n                    />\n                  }\n                </IconLink>\n              </ProjectLinks>\n            </ProjectHeader>\n            <DetailContainer largeContent>\n              <Paragraph>\n                Often I come across interesting React Component ideas on design\n                websites. When I find something that challenges or inspires me,\n                I instantly think \"I need to build that!\" When I actually build\n                the component, I store it in this project.\n              </Paragraph>\n            </DetailContainer>\n            <DetailContainer>\n              <DetailLabel>Technologies:</DetailLabel>\n              <SkillListContainer>\n                <SkillList\n                  skills={[\n                    { type: \"react\" },\n                    { type: \"javascript\" },\n                    { type: \"typescript\" },\n                  ]}\n                />\n              </SkillListContainer>\n            </DetailContainer>\n          </Project>\n          <Project id=\"site-building\" theme={theme}>\n            <ProjectHeader>\n              <ProjectName>Site Building</ProjectName>\n              <ProjectLinks>\n                <IconLink\n                  key=\"project-github\"\n                  href=\"https://github.com/carlson-erik/site-building\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  title=\"site-building github repo\"\n                  theme={theme}\n                >\n                  {\n                    <Github\n                      type=\"dev\"\n                      useAlt={false}\n                      color={theme.colors.projectList.project.iconColor}\n                    />\n                  }\n                </IconLink>\n              </ProjectLinks>\n            </ProjectHeader>\n            <DetailContainer largeContent>\n              <Paragraph>\n                Often I come across interesting Website ideas on design\n                websites. When I find something that challenges or inspires me,\n                I instantly think \"I need to build that!\" When I actually build\n                the website, I store it in this project.\n              </Paragraph>\n            </DetailContainer>\n            <DetailContainer>\n              <DetailLabel>Technologies:</DetailLabel>\n              <SkillListContainer>\n                <SkillList\n                  skills={[\n                    { type: \"react\" },\n                    { type: \"javascript\" },\n                    { type: \"typescript\" },\n                  ]}\n                />\n              </SkillListContainer>\n            </DetailContainer>\n          </Project>\n          <Project id=\"portfolio\" theme={theme}>\n            <ProjectHeader>\n              <ProjectName>This Portfolio!</ProjectName>\n              <ProjectLinks>\n                <IconLink\n                  key=\"project-github\"\n                  href=\"https://github.com/carlson-erik/carlson-erik.github.io\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  title=\"componentry github repo\"\n                  theme={theme}\n                >\n                  {\n                    <Github\n                      type=\"dev\"\n                      useAlt={false}\n                      color={theme.colors.projectList.project.iconColor}\n                    />\n                  }\n                </IconLink>\n              </ProjectLinks>\n            </ProjectHeader>\n            <DetailContainer largeContent>\n              <Paragraph>\n                Using Gatsby and TypeScript, I built the very site you're using\n                now. With this site, I want to show off the cool projects that\n                I've built and document my learning journey in a blog!\n              </Paragraph>\n            </DetailContainer>\n            <DetailContainer>\n              <DetailLabel>Technologies:</DetailLabel>\n              <SkillListContainer>\n                <SkillList\n                  skills={[\n                    { type: \"gatsby\" },\n                    { type: \"react\" },\n                    { type: \"typescript\" },\n                  ]}\n                />\n              </SkillListContainer>\n            </DetailContainer>\n          </Project>\n        </ProjectContainer>\n      </Section>\n    </ProjectSectionContainer>\n  );\n};\n\nexport default ProjectList;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\n/* ------------------ Components ------------------ */\nimport Layout from \"../components/layout\";\nimport ProjectList from \"../components/project-list\";\nimport { Heading, Link } from \"../components/styled\";\nimport { Link as GLink } from \"gatsby\";\nimport { ThemeProvider } from \"../theme/context\";\n\nconst Paragraph = styled.p`\n  font-size: 1.25rem;\n  line-height: 2rem;\n  padding-bottom: 1rem;\n\n  &:last-child {\n    padding-bottom: 0;\n  }\n`;\n\nconst Introduction = styled.section`\n  margin-bottom 2rem;:\n`;\n\nconst LandingPage = () => {\n  return (\n    <ThemeProvider>\n      <Layout>\n        <Helmet>\n          <title>Home | Erik Carlson</title>\n          <meta\n            name=\"description\"\n            content=\"Erik Carlson's Software Engineering Portfolio Home Page\"\n          />\n        </Helmet>\n        <Introduction>\n          <Heading>Hi there!</Heading>\n          <Paragraph>\n            I'm a Full Stack Software Engineer based out of Maine, US. I work at{\" \"}\n            <Link href=\"https://pega.com/\" target=\"_blank\">\n              Pegasystems\n            </Link>{\" \"}\n            as a Senior Software Engineer. At Pegasystems, I build{\" \"}\n            <Link\n              href=\"https://en.wikipedia.org/wiki/Data_visualization\"\n              target=\"_blank\"\n            >\n              Data Visualization\n            </Link>{\" \"}\n            and{\" \"}\n            <Link\n              href=\"https://en.wikipedia.org/wiki/Data_reporting\"\n              target=\"_blank\"\n            >\n              Data Reporting\n            </Link>{\" \"}\n            Software.\n          </Paragraph>\n          <Paragraph>\n            I specialize in designing and creating Front-end solutions with\n            React.js, and TypeScript. I have expertise in building backend/server\n            technologies. I like to build cool things and learn from the experience.\n          </Paragraph>\n          <Paragraph>\n            By now you're saying,{\" \"}\n            <em>\"Hey, can this guy actually do what he says?\"</em> My projects\n            and <GLink to=\"/experience\">past work experience</GLink>{\" \"}\n            speak for themselves!\n          </Paragraph>\n        </Introduction>\n        <ProjectList />\n      </Layout>\n    </ThemeProvider>\n  );\n};\n\nexport default LandingPage;\n"],"names":["props","color","type","fillColor","Icon","SocialIcon","DevIcon","React","role","viewBox","fill","xmlns","fillRule","d","clipRule","ProjectRow","styled","div","withConfig","displayName","componentId","reversed","PictureContainer","_props$theme$colors","theme","colors","borderLine","ContentContainer","Project","projectList","background","ProjectHeader","ProjectLinks","DetailContainer","largeContent","SkillListContainer","ProjectName","h3","DetailLabel","span","ProjectContainer","Section","section","ProjectSectionContainer","ProjectList","useContext","ThemeContext","Heading","id","name","StaticImage","src","alt","__imageData","require","IconLink","key","href","target","rel","title","Github","useAlt","project","iconColor","Paragraph","SkillList","skills","ExternalLink","p","Introduction","LandingPage","ThemeProvider","Layout","Helmet","content","Link","GLink","to"],"sourceRoot":""}